
Component 만드는 방법 :

    React 컴포넌트는 크게 "함수컴포넌트" 와 "클래스컴포넌트" 로 나뉜다  -->  주로 함수컴포넌트를 사용한다 (클래스 컴포넌트 불편해서 나온 것)

    Function Component (함수 컴포넌트)
    ex)
    function Welcome(props) {
        return <h1>안녕, {props.name}</h1>;
    }
    --> Welcome 이라는 이름을 가진 컴포넌트이고, 이 컴포넌트(함수)는 하나의 props 객체(name)를 받아서 인사말이 담긴 React Element 를 반환한다
    --> 이렇게 생긴 것을 "함수 컴포넌트" 라고 부른다

    ----------

    Class Component (클래스 컴포넌트)
    --> 자바스크립트의 ES6 의 class 라는 것을 사용해서 만들어진 형태의 컴포넌트이다
    ex)
    class Welcome extends React.Component {
        render() {
            return <h1>안녕, {this.props.name}</h1>;
        }
    }
    --> 위에서 작성한 함수 컴퍼넌트 Welcome 과 동일한 기능을 하는 클래스 컴포넌트이다
    --> 리액트의 모든 class 컴포넌트는, React.Component 를 상속받아서 만든다
    --> React.Component 라는 class 를 상속받아서 Welcome 이라는 클래스를 만들었고, 이것을 상속받았기 때문에 결과적으로 React Component 가 되는 것이다


-------------------------------------------------------------------


Component 이름 :
    Component 의 이름은 항상 "대문자" 로 시작해야 한다
    --> 왜냐하면 React 는 "소문자" 로 시작하는 컴포넌트를 DOM 태그로 인식하기 때문이다 (HTML 태그로 인식을 한다)

    --> 예를들어 div 나 span 과 같이 사용하는 것은 내장 컴포넌트 라는 것을 뜻하며, div 나 span 과 같은 "문자열" 형태로 React.createElement 에 전달된다
        하지만 대문자로 시작하는 Name 은 React.createElement Name 형태로 컴파일되며, 자바스크립트 파일 내에서 사용자가 정의했거나 import 한
        컴포넌트를 가리킨다.
        그렇기 때문에 컴포넌트의 이름은 항상 "대문자" 로 시작해야한다

    ex)
    HTML div 태그로 인식 :
    const element = <div />;
    --> DOM 태그를 사용하여 element 를 만든 것
    --> 우리가 이미 많이 봐오던 것처럼 DOM 태그들은 <div> , <h1> , <span> 등 처럼 모두 "소문자" 로 시작한다

    Welcome 이라는 리액트 Component 로 인식 :
    const element = <Welcome name="인제" />
    --> 사용자가 정의한 Welcome 이라는 컴포넌트를 사용한 element 이다
    --> 만약 여기에서 컴포넌트 이름이 welcome 처럼 "소문자" 로 시작했다면 React 는 내부적으로 이것을 "컴포넌트" 가 아니라 "돔 태그" 라고 인식하게 된다

    ==> 결과적으로 컴포넌트 이름을 대문자로 하지 않으면 에러가 발생하거나, 우리가 원하는대로 결과가 나오지 않게 된다
    ==> 항상 컴포넌트의 이름은 "대문자" 로 시작해야된다는 것을 꼭 기억하자


-------------------------------------------------------------------


Component 랜더링 :
    React Element (Virtual DOM) 이 실제 DOM Element 가 되는 과정 (사용자가 볼 수 있게 브라우저에 그려진다)
    Element 라고 하는 것이 실제로 화면에 보이게 되는 것이다 --> 가장 먼저 컴포넌트로부터 Element 를 만들어야 한다

    ex)
    function Welcome(pops) {
        return <h1>안녕, {props.name}</h1>;
    }
    --> Welcome 이라고 하는 함수 컴포넌트를 선언

    const element = <Welcome name="인제" />;
    ReactDOM.render (
        element,
        document.getElementById('root')
    )
    --> Welcome name = "인제" 라고 하는 값을 가진 element를 파라미터로 해서 ReactDOM.render 함수를 호출한 것이다
    --> 이렇게하면 React 는 Welcome 컴포넌트에 {name: "인제"}라고 하는 props를 넣어서 호출하고, 그 결과로 React Element 가 생성된다.

    ==> 이렇게 생성된 element 는 최종적으로 React DOM 의 render( ) 함수를 통해 실제 DOM 에 효과적으로 업데이트되고, 우리가 브라우저를 통해서 볼 수 있게 된다.