
section 05 는 리액트에서 가장 중요한 부분인 Components 와 props 에 대해서 배워보자

** 매우 중요하다 --> 완벽하게 이해하고 넘어가자 **

React Components : React에서는 모든 페이지가 컴포넌트로 구성되어있고, 하나의 컴포넌트는 또 다른 여러 개의 컴포넌트의 조합으로 구성될 수 있다
    (레고 블록 조립하듯이 컴포넌트들을 모아서 개발)

    React 를 컴포넌트 기반이라고 부르는 것은 작은 컴포넌트들이 모여서 하나의 컴포넌트를 구성하고, 또 이러한 컴포넌트들이 모여서 전체 페이지를 구성한다

    React Component의 개념은 자바스크립트의 함수와 유사하다
    --> "입력" 을 받아서 정해진 "출력" 을 내뱉는다 --> React Component를 그냥 하나의 함수라고 생각하면 좀 더 쉽다
        
    --> 하지만 리액트 컴포넌트의 입력과 출력은 일반적인 자바스크립트와는 조금 다르다
        - React Components 의 "입력" 은 "Props" 이다
        - React Components 의 "출력" 은 "React Element" 이다 (Virtual DOM)

        ==> 결국, React Component 가 해주는 역할은 어떠한 속성(Props)들을 입력으로 받아서, 그에 맞는 React Element 를 생성하여 반환(return)해주는 것이다
        ==> React Component 는 만들고자 하는대로 속성(Props)을 넣으면, 해당 속성에 맞춰 화면에 나타날 Element 를 만들어 주는 것이다 (Virtual DOM)


----------------------------------------------------------------------------


Props : React Component 의 속성

    붕어빵 ex)
    React Component 는 붕어빵 모양을 만드는 틀이라고 한다면,
    Props 는 붕어빵에 들어가는 속재료를 의미한다 - ex) 팥, 슈크림, 고구마...

    --> 이처럼 Props 는 같은 React Component 에서 눈에 보이는 글자나 색깔 등의 속성을 바꾸고 싶을 때 사용하는 Component 의 속재료라고 생각하면 된다
    
    
    여행 어플리케이션 ex)
    여행지(서울, 인천, 대구...) 나타내주는 박스(상단은 이미지, 하단은 텍스트)가 여러개 있다
    --> 이 박스들의 사이즈와 라운딩 상태는 모두 같다 (텍스트나 색상, 이미지만 다름)  -->  같은 React Component 로 만들어졌기 때문에 생김새는 모두 같다

    --> 반복되기 때문에, 속성 값만 바꿔서 반복하여 브라우저에 나타나게 해준 것

    ==> 이러한 컴포넌트의 모습과 속성을 결정하는 것이 바로 Props 이다  -->  내부에 있는 이미지, 텍스트, 색상 들만 다르게 해준 것이다 (속재료)

    Props : 컴포넌트에 전달할 다양한 정보를 담고 있는 자바스크립트의 객체
                우리가 컴포넌트에 어떤 데이터를 전달하고, 전달된 데이터에 따라 다른 모습의 Element 를 화면에 랜더링하고 싶을 때
                해당 데이터를 Props 에 넣어서 전달하는 것이다
